#!rnn.py


def mask(x, axis, pos, max_amount):
    """
    :param tf.Tensor x: (batch,time,feature)
    :param int axis:
    :param tf.Tensor pos: (batch,)
    :param int max_amount: inclusive
    """
    import tensorflow as tf

    ndim = x.get_shape().ndims
    n_batch = tf.shape(x)[0]
    dim = tf.shape(x)[axis]
    # amount = tf.random_uniform(shape=(n_batch,), minval=1, maxval=max_amount + 1, dtype=tf.int32)
    amount = tf.random.uniform(
        shape=(n_batch,), minval=1, maxval=max_amount + 1, dtype=tf.int32
    )
    pos2 = tf.minimum(pos + amount, dim)
    idxs = tf.expand_dims(tf.range(0, dim), 0)  # (1,dim)
    pos_bc = tf.expand_dims(pos, 1)  # (batch,1)
    pos2_bc = tf.expand_dims(pos2, 1)  # (batch,1)
    cond = tf.logical_and(
        tf.greater_equal(idxs, pos_bc), tf.less(idxs, pos2_bc)
    )  # (batch,dim)
    cond = tf.reshape(
        cond, [tf.shape(x)[i] if i in (0, axis) else 1 for i in range(ndim)]
    )
    from TFUtil import where_bc

    x = where_bc(cond, 0.0, x)
    return x


def random_mask(x, axis, min_num, max_num, max_dims):
    """
    :param tf.Tensor x: (batch,time,feature)
    :param int axis:
    :param int|tf.Tensor min_num:
    :param int|tf.Tensor max_num: inclusive
    :param int max_dims: inclusive
    """
    import tensorflow as tf

    n_batch = tf.shape(x)[0]
    # num = tf.random_uniform(shape=(n_batch,), minval=min_num, maxval=max_num + 1, dtype=tf.int32)
    num = tf.random.uniform(
        shape=(n_batch,), minval=min_num, maxval=max_num + 1, dtype=tf.int32
    )
    # https://github.com/tensorflow/tensorflow/issues/9260
    # https://timvieira.github.io/blog/post/2014/08/01/gumbel-max-trick-and-weighted-reservoir-sampling/
    # z = -tf.log(-tf.log(tf.random_uniform((n_batch, tf.shape(x)[axis]), 0, 1)))
    z = -tf.math.log(
        -tf.math.log(tf.random.uniform((n_batch, tf.shape(x)[axis]), 0, 1))
    )

    ## if the time axis dim. is smaller than maxval - 1
    # num = tf.cond(tf.less(tf.shape(x)[axis], max_num), lambda: tf.random_uniform(shape=(n_batch,), minval=min_num, maxval=tf.shape(x)[axis] + 1, dtype=tf.int32), lambda: num)
    num = tf.cond(
        tf.less(tf.shape(x)[axis], max_num),
        lambda: tf.random.uniform(
            shape=(n_batch,),
            minval=min_num,
            maxval=tf.shape(x)[axis] + 1,
            dtype=tf.int32,
        ),
        lambda: num,
    )

    _, indices = tf.nn.top_k(z, tf.reduce_max(num))
    # indices should be sorted, and of shape (batch,num), entries (int32) in [0,dim)
    # indices = tf.Print(indices, ["indices", indices, tf.shape(indices)])
    _, x = tf.while_loop(
        cond=lambda i, _: tf.less(i, tf.reduce_max(num)),
        body=lambda i, x: (
            i + 1,
            tf.compat.v1.where(
                tf.less(i, num),
                mask(x, axis=axis, pos=indices[:, i], max_amount=max_dims),
                x,
            ),
        ),
        loop_vars=(0, x),
    )
    return x


def summary(name, x):
    """
    :param str name:
    :param tf.Tensor x: (batch,time,feature)
    """
    import tensorflow as tf

    # tf.summary.image wants [batch_size, height,  width, channels],
    # we have (batch, time, feature).
    img = tf.expand_dims(x, axis=3)  # (batch,time,feature,1)
    img = tf.transpose(img, [0, 2, 1, 3])  # (batch,feature,time,1)
    tf.summary.image(name, img, max_outputs=10)
    tf.summary.scalar("%s_max_abs" % name, tf.reduce_max(tf.abs(x)))
    mean = tf.reduce_mean(x)
    tf.summary.scalar("%s_mean" % name, mean)
    stddev = tf.sqrt(tf.reduce_mean(tf.square(x - mean)))
    tf.summary.scalar("%s_stddev" % name, stddev)
    tf.summary.histogram("%s_hist" % name, tf.reduce_max(tf.abs(x), axis=2))


def transform(x, network):
    import tensorflow as tf

    # summary("features", x)
    # x = tf.clip_by_value(x, -3.0, 3.0)
    # summary("features_clip", x)

    max_reps_time = network.get_config().typed_value("max_reps_time")
    min_reps_time = network.get_config().typed_value("min_reps_time")
    max_reps_feature = network.get_config().typed_value("max_reps_feature")
    min_reps_feature = network.get_config().typed_value("min_reps_feature")

    max_len_time = network.get_config().typed_value("max_len_time")
    max_len_feature = network.get_config().typed_value("max_len_feature")

    # number of repetitions for time masking
    if max_reps_time is None:
        max_reps_time = tf.maximum(
            tf.shape(x)[1] // (max_len_time or 20), 1
        )  # // 100, 1)
    if min_reps_time is None:
        min_reps_time = 1

    # number of repetitions for feature masking
    if max_reps_feature is None:
        max_reps_feature = 2
    if min_reps_feature is None:
        min_reps_feature = 1

    # length of time masking
    if max_len_time is None:
        max_len_time = 20
    # length of feature masking
    if max_len_feature is None:
        max_len_feature = tf.shape(x)[-1] // 5

    def get_masked():
        x_masked = x
        x_masked = random_mask(
            x_masked,
            axis=1,
            min_num=min_reps_time,
            max_num=max_reps_time,
            max_dims=max_len_time,
        )
        x_masked = random_mask(
            x_masked,
            axis=2,
            min_num=min_reps_feature,
            max_num=max_reps_feature,
            max_dims=max_len_feature,
        )
        # summary("features_mask", x_masked)
        return x_masked

    x = network.cond_on_train(get_masked, lambda: x)

    return x


def transform_no_mask(x, network):
    import tensorflow as tf

    # summary("features", x)
    # x = tf.clip_by_value(x, -3.0, 3.0)
    # summary("features_clip", x)

    max_reps_time = network.get_config().typed_value("max_reps_time")
    min_reps_time = network.get_config().typed_value("min_reps_time")
    max_reps_feature = network.get_config().typed_value("max_reps_feature")
    min_reps_feature = network.get_config().typed_value("min_reps_feature")

    max_len_time = network.get_config().typed_value("max_len_time")
    max_len_feature = network.get_config().typed_value("max_len_feature")

    # number of repetitions for time masking
    if max_reps_time is None:
        max_reps_time = tf.maximum(
            tf.shape(x)[1] // (max_len_time or 20), 1
        )  # // 100, 1)
    if min_reps_time is None:
        min_reps_time = 1

    # number of repetitions for feature masking
    if max_reps_feature is None:
        max_reps_feature = 2
    if min_reps_feature is None:
        min_reps_feature = 1

    # length of time masking
    if max_len_time is None:
        max_len_time = 20
    # length of feature masking
    if max_len_feature is None:
        max_len_feature = tf.shape(x)[-1] // 5

    def get_masked():
        x_masked = x
        x_masked = random_mask(
            x_masked,
            axis=1,
            min_num=min_reps_time,
            max_num=max_reps_time,
            max_dims=max_len_time,
        )
        x_masked = random_mask(
            x_masked,
            axis=2,
            min_num=min_reps_feature,
            max_num=max_reps_feature,
            max_dims=max_len_feature,
        )
        # summary("features_mask", x_masked)
        return x_masked

    # x = network.cond_on_train(x, lambda: x)

    return x


batch_size = 6144
batching = "sort_bin_shuffle:.64"
behavior_version = 12
cache_size = "0"
chunking = "400:200"
cleanup_old_models = {"keep": [50, 80, 110, 120], "keep_best_n": 3, "keep_last_n": 3}
debug_print_layer_output_template = True
dev = {
    "class": "ExternSprintDataset",
    "partitionEpoch": 1,
    "sprintConfigStr": "--config=rasr.dev.config --*.LOGFILE=nn-trainer.dev.log --*.TASK=1",
    "sprintTrainerExecPath": "/work/asr3/zeyer/schupp/setups-data/custom_rasr/rasr/arch/linux-x86_64-generic_mkl/nn-trainer.linux-x86_64-generic_mkl",
}
device = "gpu"
devtrain = {
    "class": "ExternSprintDataset",
    "partitionEpoch": 1,
    "sprintConfigStr": "--config=rasr.devtrain.config --*.LOGFILE=nn-trainer.devtrain.log --*.TASK=1",
    "sprintTrainerExecPath": "/work/asr3/zeyer/schupp/setups-data/custom_rasr/rasr/arch/linux-x86_64-generic_mkl/nn-trainer.linux-x86_64-generic_mkl",
}
eval_datasets = {
    "devtrain": {
        "class": "ExternSprintDataset",
        "partitionEpoch": 1,
        "sprintConfigStr": "--config=rasr.devtrain.config --*.LOGFILE=nn-trainer.devtrain.log --*.TASK=1",
        "sprintTrainerExecPath": "/work/asr3/zeyer/schupp/setups-data/custom_rasr/rasr/arch/linux-x86_64-generic_mkl/nn-trainer.linux-x86_64-generic_mkl",
    }
}
extra_tag_tim_setup = "baseline-big-short"
gradient_noise = 0.0
learning_rate_control = "constant"
learning_rate_file = "learning_rates"
learning_rates = [
    0.0002,
    0.00023333333333333333,
    0.0002666666666666667,
    0.00030000000000000003,
    0.0003333333333333334,
    0.0003666666666666667,
    0.0004,
    0.0004333333333333333,
    0.00046666666666666666,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.0005,
    0.000495,
    0.00049005,
    0.00048514950000000005,
    0.00048029800499999997,
    0.00047549502494999995,
    0.0004707400747005,
    0.00046603267395349497,
    0.00046137234721396004,
    0.00045675862374182043,
    0.0004521910375044022,
    0.0004476691271293582,
    0.0004431924358580646,
    0.00043876051149948394,
    0.00043437290638448915,
    0.00043002917732064424,
    0.0004257288855474378,
    0.0004214715966919634,
    0.00041725688072504375,
    0.00041308431191779333,
    0.00040895346879861536,
    0.0004048639341106292,
    0.0004008152947695229,
    0.0003968071418218277,
    0.0003928390704036094,
    0.00038891067969957333,
    0.0003850215729025776,
    0.0003811713571735518,
    0.0003773596436018163,
    0.0003735860471657981,
    0.0003698501866941401,
    0.00036615168482719875,
    0.0003624901679789267,
    0.00035886526629913746,
    0.00035527661363614604,
    0.00035172384749978456,
    0.00034820660902478676,
    0.0003447245429345389,
    0.00034127729750519346,
    0.00033786452453014155,
    0.0003344858792848401,
    0.00033114102049199175,
    0.0003278296102870718,
    0.0003245513141842011,
    0.00032130580104235905,
    0.0003180927430319355,
    0.00031491181560161616,
    0.00031176269744559996,
    0.00030864507047114397,
    0.0003055586197664325,
    0.0003025030335687682,
    0.0002994780032330805,
    0.0002964832232007497,
    0.00029351839096874223,
    0.00029058320705905476,
    0.00028767737498846423,
    0.0002848006012385796,
    0.0002819525952261938,
    0.00027913306927393185,
    0.00027634173858119256,
    0.00027357832119538064,
    0.0002708425379834268,
    0.00026813411260359247,
    0.0002654527714775566,
    0.000262798243762781,
    0.0002601702613251532,
    0.0002575685587119017,
    0.00025499287312478265,
    0.0002524429443935348,
    0.00024991851494959947,
    0.0002474193298001035,
    0.0002449451365021025,
    0.00024249568513708142,
    0.0002400707282857106,
    0.00023767002100285347,
    0.00023529332079282495,
    0.0002329403875848967,
    0.00023061098370904772,
    0.00022830487387195725,
    0.0002260218251332377,
    0.0002237616068819053,
    0.00022152399081308625,
    0.00021930875090495538,
    0.00021711566339590582,
    0.00021494450676194676,
    0.0002127950616943273,
    0.00021066711107738402,
    0.00020856043996661018,
    0.0002064748355669441,
    0.00020441008721127464,
    0.0002023659863391619,
    0.00020034232647577027,
    0.00019833890321101254,
    0.00019635551417890244,
    0.0001943919590371134,
    0.00019244803944674227,
    0.00019052355905227483,
    0.00018861832346175208,
    0.0001867321402271346,
    0.00018486481882486322,
    0.0001830161706366146,
    0.00018118600893024845,
    0.00017937414884094596,
    0.0001775804073525365,
    0.00017580460327901114,
    0.000174046557246221,
    0.0001723060916737588,
    0.00017058303075702123,
    0.000168877200449451,
    0.0001671884284449565,
    0.00016551654416050693,
    0.00016386137871890187,
    0.00016222276493171284,
    0.0001606005372823957,
    0.00015899453190957176,
    0.00015740458659047602,
    0.00015583054072457127,
    0.00015427223531732555,
    0.0001527295129641523,
    0.00015120221783451076,
    0.00014969019565616565,
    0.000148193293699604,
    0.00014671136076260796,
    0.00014524424715498189,
    0.00014379180468343205,
    0.00014235388663659773,
    0.00014093034777023174,
    0.00013952104429252942,
    0.00013812583384960415,
    0.00013674457551110812,
    0.00013537712975599702,
    0.00013402335845843705,
    0.00013268312487385266,
    0.00013135629362511414,
    0.000130042730688863,
    0.00012874230338197438,
    0.00012745488034815463,
    0.0001261803315446731,
    0.00012491852822922635,
    0.0001236693429469341,
    0.00012243264951746475,
    0.00012120832302229009,
    0.00011999623979206719,
    0.00011879627739414652,
    0.00011760831462020507,
    0.00011643223147400301,
    0.00011526790915926296,
    0.00011411523006767035,
    0.00011297407776699364,
    0.0001118443369893237,
    0.00011072589361943045,
    0.00010961863468323616,
    0.00010852244833640378,
    0.00010743722385303975,
    0.00010636285161450936,
    0.00010529922309836425,
    0.00010424623086738062,
    0.00010320376855870681,
    0.00010217173087311975,
    0.00010115001356438855,
    0.00010013851342874465,
    9.913712829445722e-05,
    9.814575701151264e-05,
    9.716429944139752e-05,
    9.619265644698354e-05,
    9.52307298825137e-05,
    9.427842258368856e-05,
    9.333563835785167e-05,
    9.240228197427316e-05,
    9.147825915453043e-05,
    9.056347656298513e-05,
    8.965784179735526e-05,
    8.876126337938171e-05,
    8.78736507455879e-05,
    8.6994914238132e-05,
    8.61249650957507e-05,
    8.526371544479318e-05,
    8.441107829034525e-05,
    8.35669675074418e-05,
    8.273129783236738e-05,
    8.190398485404371e-05,
    8.108494500550328e-05,
    8.027409555544824e-05,
    7.947135459989376e-05,
    7.867664105389481e-05,
    7.788987464335587e-05,
    7.71109758969223e-05,
    7.633986613795308e-05,
    7.557646747657356e-05,
    7.482070280180782e-05,
    7.407249577378973e-05,
    7.333177081605185e-05,
    7.259845310789132e-05,
    7.18724685768124e-05,
    7.115374389104429e-05,
    7.044220645213385e-05,
    6.973778438761249e-05,
    6.904040654373638e-05,
    6.8350002478299e-05,
    6.766650245351602e-05,
    6.698983742898086e-05,
    6.631993905469105e-05,
    6.565673966414414e-05,
    6.500017226750269e-05,
    6.435017054482767e-05,
    6.370666883937939e-05,
    6.306960215098558e-05,
    6.243890612947573e-05,
    6.181451706818098e-05,
    6.119637189749917e-05,
    6.058440817852418e-05,
    5.997856409673894e-05,
    5.9378778455771544e-05,
    5.878499067121383e-05,
    5.819714076450169e-05,
    5.7615169356856673e-05,
    5.70390176632881e-05,
    5.646862748665522e-05,
    5.590394121178867e-05,
    5.5344901799670784e-05,
    5.479145278167408e-05,
    5.4243538253857333e-05,
    5.370110287131876e-05,
    5.316409184260557e-05,
    5.263245092417951e-05,
    5.210612641493772e-05,
    5.158506515078835e-05,
    5.106921449928046e-05,
    5.055852235428766e-05,
    5.005293713074478e-05,
    4.9552407759437336e-05,
    4.905688368184296e-05,
    4.8566314845024525e-05,
    4.808065169657428e-05,
    4.759984517960854e-05,
    4.7123846727812454e-05,
    4.665260826053433e-05,
    4.618608217792898e-05,
    4.572422135614969e-05,
    4.52669791425882e-05,
    4.481430935116231e-05,
    4.4366166257650695e-05,
    4.392250459507418e-05,
    4.3483279549123443e-05,
    4.30484467536322e-05,
    4.261796228609588e-05,
    4.2191782663234925e-05,
    4.176986483660258e-05,
    4.1352166188236546e-05,
    4.0938644526354176e-05,
    4.052925808109064e-05,
    4.012396550027973e-05,
    3.972272584527693e-05,
    3.9325498586824164e-05,
    3.893224360095592e-05,
    3.854292116494636e-05,
    3.81574919532969e-05,
    3.777591703376393e-05,
    3.7398157863426294e-05,
    3.702417628479203e-05,
    3.6653934521944105e-05,
    3.628739517672466e-05,
    3.592452122495742e-05,
    3.556527601270784e-05,
    3.5209623252580765e-05,
    3.485752702005496e-05,
    3.4508951749854406e-05,
    3.416386223235586e-05,
    3.38222236100323e-05,
    3.348400137393198e-05,
    3.314916136019266e-05,
    3.2817669746590735e-05,
    3.248949304912482e-05,
    3.216459811863358e-05,
    3.1842952137447245e-05,
    3.152452261607277e-05,
    3.1209277389912044e-05,
    3.089718461601292e-05,
    3.058821276985279e-05,
    3.0282330642154263e-05,
    2.997950733573272e-05,
    2.9679712262375394e-05,
    2.9382915139751638e-05,
    2.908908598835412e-05,
    2.879819512847058e-05,
    2.8510213177185875e-05,
    2.8225111045414016e-05,
    2.7942859934959874e-05,
    2.7663431335610275e-05,
    2.7386797022254173e-05,
    2.711292905203163e-05,
    2.6841799761511315e-05,
    2.65733817638962e-05,
    2.630764794625724e-05,
    2.6044571466794665e-05,
    2.578412575212672e-05,
    2.552628449460545e-05,
    2.5271021649659397e-05,
    2.5018311433162804e-05,
    2.4768128318831174e-05,
    2.452044703564286e-05,
    2.4275242565286434e-05,
    2.4032490139633568e-05,
    2.3792165238237232e-05,
    2.355424358585486e-05,
    2.331870114999631e-05,
    2.3085514138496347e-05,
    2.2854658997111385e-05,
    2.262611240714027e-05,
    2.2399851283068868e-05,
    2.217585277023818e-05,
    2.1954094242535796e-05,
    2.1734553300110436e-05,
    2.1517207767109334e-05,
    2.130203568943824e-05,
    2.1089015332543856e-05,
    2.087812517921842e-05,
    2.0669343927426237e-05,
    2.0462650488151972e-05,
    2.0258023983270453e-05,
    2.0055443743437747e-05,
    1.985488930600337e-05,
    1.9656340412943337e-05,
    1.9459777008813903e-05,
    1.9265179238725762e-05,
    1.9072527446338507e-05,
    1.8881802171875123e-05,
    1.8692984150156368e-05,
    1.8506054308654804e-05,
    1.8320993765568256e-05,
    1.8137783827912572e-05,
    1.795640598963345e-05,
    1.7776841929737113e-05,
    1.7599073510439742e-05,
    1.7423082775335345e-05,
    1.724885194758199e-05,
    1.707636342810617e-05,
    1.690559979382511e-05,
    1.673654379588686e-05,
    1.656917835792799e-05,
    1.640348657434871e-05,
    1.623945170860522e-05,
    1.6077057191519172e-05,
    1.5916286619603978e-05,
    1.5757123753407937e-05,
    1.5599552515873857e-05,
    1.544355699071512e-05,
    1.5289121420807967e-05,
    1.5136230206599889e-05,
    1.498486790453389e-05,
    1.483501922548855e-05,
    1.4686669033233666e-05,
    1.4539802342901329e-05,
    1.4394404319472315e-05,
    1.4250460276277591e-05,
    1.4107955673514816e-05,
    1.3966876116779668e-05,
    1.3827207355611871e-05,
    1.3688935282055752e-05,
    1.3552045929235194e-05,
    1.3416525469942842e-05,
    1.3282360215243414e-05,
    1.3149536613090979e-05,
    1.3018041246960069e-05,
    1.2887860834490468e-05,
    1.2758982226145562e-05,
    1.2631392403884107e-05,
    1.2505078479845267e-05,
    1.2380027695046814e-05,
    1.2256227418096346e-05,
    1.2133665143915382e-05,
    1.2012328492476228e-05,
    1.1892205207551466e-05,
    1.1773283155475952e-05,
    1.1655550323921192e-05,
    1.153899482068198e-05,
    1.1423604872475158e-05,
    1.1309368823750407e-05,
    1.1196275135512903e-05,
    1.1084312384157774e-05,
    1.0973469260316197e-05,
    1.0863734567713035e-05,
    1.0755097222035904e-05,
    1.0647546249815544e-05,
    1.054107078731739e-05,
    1.0435660079444214e-05,
    1.0331303478649772e-05,
    1.0227990443863276e-05,
    1.0125710539424643e-05,
    1.0024453434030396e-05,
    1e-05,
]
log = ["./returnn.log"]
log_batch_size = True
log_verbosity = 5
max_len_feature = 15
max_len_time = 20
max_reps_feature = 1
max_reps_time = 20
min_learning_rate = 1e-05
min_reps_feature = 0
min_reps_time = 0
model = "/u/schupp/setups/i6_exp_conformer_rtc/work/i6_experiments/users/schupp/hybrid_hmm_nn/helpers/returnn_helpers/ReturnnRasrTrainingJobDevtrain.CFWRlMMfJur4/output/models/epoch"
multiprocessing = True
network = {
    "aux_6_ff1": {
        "activation": "relu",
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["aux_6_length_masked"],
        "n_out": 256,
        "with_bias": True,
    },
    "aux_6_ff2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["aux_6_ff1"],
        "n_out": 256,
        "with_bias": True,
    },
    "aux_6_length_masked": {
        "class": "reinterpret_data",
        "from": ["aux_6_upsampled0"],
        "size_base": "data:classes",
    },
    "aux_6_output_prob": {
        "class": "softmax",
        "dropout": 0.0,
        "from": ["aux_6_ff2"],
        "loss": "ce",
        "loss_opts": {
            "focal_loss_factor": 0.0,
            "label_smoothing": 0.0,
            "use_normalized_loss": False,
        },
        "loss_scale": 0.5,
        "target": "classes",
    },
    "aux_6_upsampled0": {
        "activation": "relu",
        "class": "transposed_conv",
        "filter_size": (3,),
        "from": ["enc_006"],
        "n_out": 512,
        "strides": (3,),
        "with_bias": True,
    },
    "conv0_0": {
        "activation": None,
        "class": "conv",
        "filter_size": (3, 3),
        "from": "source0",
        "in_spatial_dims": ["T", "dim:50"],
        "n_out": 32,
        "padding": "same",
        "with_bias": True,
    },
    "conv0_1": {
        "activation": "relu",
        "class": "conv",
        "filter_size": (3, 3),
        "from": "conv0_0",
        "in_spatial_dims": ["T", "dim:50"],
        "n_out": 32,
        "padding": "same",
        "with_bias": True,
    },
    "conv0p": {
        "class": "pool",
        "from": "conv0_1",
        "in_spatial_dims": ["T", "dim:50"],
        "mode": "max",
        "padding": "same",
        "pool_size": (1, 2),
        "strides": (1, 2),
    },
    "conv1_0": {
        "activation": None,
        "class": "conv",
        "filter_size": (3, 3),
        "from": "conv0p",
        "in_spatial_dims": ["T", "dim:25"],
        "n_out": 64,
        "padding": "same",
        "with_bias": True,
    },
    "conv1_1": {
        "activation": "relu",
        "class": "conv",
        "filter_size": (3, 3),
        "from": "conv1_0",
        "in_spatial_dims": ["T", "dim:25"],
        "n_out": 64,
        "padding": "same",
        "with_bias": True,
    },
    "conv1p": {
        "class": "pool",
        "from": "conv1_1",
        "in_spatial_dims": ["T", "dim:25"],
        "mode": "max",
        "padding": "same",
        "pool_size": (1, 1),
        "strides": (1, 1),
    },
    "conv_merged": {
        "axes": ["dim:25", "dim:64"],
        "class": "merge_dims",
        "from": "conv1p",
    },
    "embedding": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["feature_stacking_merged"],
        "n_out": 512,
        "with_bias": True,
    },
    "embedding_dropout": {"class": "dropout", "dropout": 0.0, "from": ["embedding"]},
    "enc_001": {"class": "copy", "from": "enc_001_ff2_ff2_cond_train"},
    "enc_001_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_001_conv_pointwise1"],
    },
    "enc_001_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_001_conv_batchnorm"],
    },
    "enc_001_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_001_conv_depthwise"],
    },
    "enc_001_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_001_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_001_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_001_conv_pointwise2"],
    },
    "enc_001_conv_laynorm": {"class": "layer_norm", "from": ["enc_001_self_att_out"]},
    "enc_001_conv_output": {
        "class": "combine",
        "from": ["enc_001_self_att_out", "enc_001_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_001_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_001_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_001_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_001_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_001_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "embedding_dropout",
            "subnetwork": {
                "embedding_dropout": {"class": "copy", "from": "data"},
                "enc_001_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_001_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_001_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_001_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_001_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_001_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_001_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_001_ff1_conv2"],
                    "name_scope": "/enc_001_ff1_drop_scope",
                },
                "enc_001_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_001_ff1_drop"],
                    "name_scope": "/enc_001_ff1_drop_half_scope",
                },
                "enc_001_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "embedding_dropout",
                    "name_scope": "/enc_001_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_001_ff1_drop_half", "embedding_dropout"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "embedding_dropout"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "embedding_dropout",
                "subnetwork": {
                    "embedding_dropout": {"class": "copy", "from": "data"},
                    "enc_001_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_001_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_001_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_001_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_001_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_001_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_001_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_001_ff1_conv2"],
                        "name_scope": "/enc_001_ff1_drop_scope",
                    },
                    "enc_001_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_001_ff1_drop"],
                        "name_scope": "/enc_001_ff1_drop_half_scope",
                    },
                    "enc_001_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "embedding_dropout",
                        "name_scope": "/enc_001_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_001_ff1_drop_half", "embedding_dropout"],
                    },
                },
            },
        },
    },
    "enc_001_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_001_conv_output",
            "subnetwork": {
                "enc_001_conv_output": {"class": "copy", "from": "data"},
                "enc_001_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_001_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_001_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_001_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_001_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_001_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_001_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_001_ff2_conv2"],
                    "name_scope": "/enc_001_ff2_drop_scope",
                },
                "enc_001_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_001_ff2_drop"],
                    "name_scope": "/enc_001_ff2_drop_half_scope",
                },
                "enc_001_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_001_conv_output",
                    "name_scope": "/enc_001_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_001_ff2_drop_half", "enc_001_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_001_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_001_conv_output",
                "subnetwork": {
                    "enc_001_conv_output": {"class": "copy", "from": "data"},
                    "enc_001_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_001_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_001_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_001_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_001_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_001_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_001_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_001_ff2_conv2"],
                        "name_scope": "/enc_001_ff2_drop_scope",
                    },
                    "enc_001_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_001_ff2_drop"],
                        "name_scope": "/enc_001_ff2_drop_half_scope",
                    },
                    "enc_001_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_001_conv_output",
                        "name_scope": "/enc_001_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_001_ff2_drop_half", "enc_001_conv_output"],
                    },
                },
            },
        },
    },
    "enc_001_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_001_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_001_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_001_self_att_laynorm"],
        "key_shift": "enc_001_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_001_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_001_self_att_lin"],
    },
    "enc_001_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_001_ff1_ff1_cond_train"],
    },
    "enc_001_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_001_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_001_self_att_out": {
        "class": "combine",
        "from": ["enc_001_ff1_ff1_cond_train", "enc_001_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_002": {"class": "copy", "from": "enc_002_ff2_ff2_cond_train"},
    "enc_002_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_002_conv_pointwise1"],
    },
    "enc_002_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_002_conv_batchnorm"],
    },
    "enc_002_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_002_conv_depthwise"],
    },
    "enc_002_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_002_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_002_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_002_conv_pointwise2"],
    },
    "enc_002_conv_laynorm": {"class": "layer_norm", "from": ["enc_002_self_att_out"]},
    "enc_002_conv_output": {
        "class": "combine",
        "from": ["enc_002_self_att_out", "enc_002_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_002_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_002_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_002_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_002_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_002_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_001",
            "subnetwork": {
                "enc_001": {"class": "copy", "from": "data"},
                "enc_002_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_002_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_002_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_002_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_002_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_002_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_002_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_002_ff1_conv2"],
                    "name_scope": "/enc_002_ff1_drop_scope",
                },
                "enc_002_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_002_ff1_drop"],
                    "name_scope": "/enc_002_ff1_drop_half_scope",
                },
                "enc_002_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_001",
                    "name_scope": "/enc_002_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_002_ff1_drop_half", "enc_001"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_001"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_001",
                "subnetwork": {
                    "enc_001": {"class": "copy", "from": "data"},
                    "enc_002_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_002_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_002_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_002_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_002_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_002_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_002_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_002_ff1_conv2"],
                        "name_scope": "/enc_002_ff1_drop_scope",
                    },
                    "enc_002_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_002_ff1_drop"],
                        "name_scope": "/enc_002_ff1_drop_half_scope",
                    },
                    "enc_002_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_001",
                        "name_scope": "/enc_002_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_002_ff1_drop_half", "enc_001"],
                    },
                },
            },
        },
    },
    "enc_002_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_002_conv_output",
            "subnetwork": {
                "enc_002_conv_output": {"class": "copy", "from": "data"},
                "enc_002_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_002_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_002_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_002_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_002_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_002_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_002_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_002_ff2_conv2"],
                    "name_scope": "/enc_002_ff2_drop_scope",
                },
                "enc_002_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_002_ff2_drop"],
                    "name_scope": "/enc_002_ff2_drop_half_scope",
                },
                "enc_002_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_002_conv_output",
                    "name_scope": "/enc_002_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_002_ff2_drop_half", "enc_002_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_002_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_002_conv_output",
                "subnetwork": {
                    "enc_002_conv_output": {"class": "copy", "from": "data"},
                    "enc_002_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_002_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_002_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_002_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_002_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_002_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_002_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_002_ff2_conv2"],
                        "name_scope": "/enc_002_ff2_drop_scope",
                    },
                    "enc_002_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_002_ff2_drop"],
                        "name_scope": "/enc_002_ff2_drop_half_scope",
                    },
                    "enc_002_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_002_conv_output",
                        "name_scope": "/enc_002_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_002_ff2_drop_half", "enc_002_conv_output"],
                    },
                },
            },
        },
    },
    "enc_002_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_002_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_002_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_002_self_att_laynorm"],
        "key_shift": "enc_002_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_002_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_002_self_att_lin"],
    },
    "enc_002_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_002_ff1_ff1_cond_train"],
    },
    "enc_002_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_002_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_002_self_att_out": {
        "class": "combine",
        "from": ["enc_002_ff1_ff1_cond_train", "enc_002_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_003": {"class": "copy", "from": "enc_003_ff2_ff2_cond_train"},
    "enc_003_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_003_conv_pointwise1"],
    },
    "enc_003_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_003_conv_batchnorm"],
    },
    "enc_003_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_003_conv_depthwise"],
    },
    "enc_003_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_003_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_003_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_003_conv_pointwise2"],
    },
    "enc_003_conv_laynorm": {"class": "layer_norm", "from": ["enc_003_self_att_out"]},
    "enc_003_conv_output": {
        "class": "combine",
        "from": ["enc_003_self_att_out", "enc_003_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_003_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_003_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_003_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_003_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_003_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_002",
            "subnetwork": {
                "enc_002": {"class": "copy", "from": "data"},
                "enc_003_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_003_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_003_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_003_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_003_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_003_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_003_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_003_ff1_conv2"],
                    "name_scope": "/enc_003_ff1_drop_scope",
                },
                "enc_003_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_003_ff1_drop"],
                    "name_scope": "/enc_003_ff1_drop_half_scope",
                },
                "enc_003_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_002",
                    "name_scope": "/enc_003_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_003_ff1_drop_half", "enc_002"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_002"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_002",
                "subnetwork": {
                    "enc_002": {"class": "copy", "from": "data"},
                    "enc_003_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_003_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_003_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_003_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_003_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_003_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_003_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_003_ff1_conv2"],
                        "name_scope": "/enc_003_ff1_drop_scope",
                    },
                    "enc_003_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_003_ff1_drop"],
                        "name_scope": "/enc_003_ff1_drop_half_scope",
                    },
                    "enc_003_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_002",
                        "name_scope": "/enc_003_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_003_ff1_drop_half", "enc_002"],
                    },
                },
            },
        },
    },
    "enc_003_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_003_conv_output",
            "subnetwork": {
                "enc_003_conv_output": {"class": "copy", "from": "data"},
                "enc_003_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_003_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_003_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_003_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_003_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_003_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_003_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_003_ff2_conv2"],
                    "name_scope": "/enc_003_ff2_drop_scope",
                },
                "enc_003_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_003_ff2_drop"],
                    "name_scope": "/enc_003_ff2_drop_half_scope",
                },
                "enc_003_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_003_conv_output",
                    "name_scope": "/enc_003_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_003_ff2_drop_half", "enc_003_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_003_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_003_conv_output",
                "subnetwork": {
                    "enc_003_conv_output": {"class": "copy", "from": "data"},
                    "enc_003_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_003_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_003_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_003_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_003_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_003_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_003_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_003_ff2_conv2"],
                        "name_scope": "/enc_003_ff2_drop_scope",
                    },
                    "enc_003_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_003_ff2_drop"],
                        "name_scope": "/enc_003_ff2_drop_half_scope",
                    },
                    "enc_003_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_003_conv_output",
                        "name_scope": "/enc_003_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_003_ff2_drop_half", "enc_003_conv_output"],
                    },
                },
            },
        },
    },
    "enc_003_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_003_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_003_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_003_self_att_laynorm"],
        "key_shift": "enc_003_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_003_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_003_self_att_lin"],
    },
    "enc_003_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_003_ff1_ff1_cond_train"],
    },
    "enc_003_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_003_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_003_self_att_out": {
        "class": "combine",
        "from": ["enc_003_ff1_ff1_cond_train", "enc_003_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_004": {"class": "copy", "from": "enc_004_ff2_ff2_cond_train"},
    "enc_004_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_004_conv_pointwise1"],
    },
    "enc_004_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_004_conv_batchnorm"],
    },
    "enc_004_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_004_conv_depthwise"],
    },
    "enc_004_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_004_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_004_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_004_conv_pointwise2"],
    },
    "enc_004_conv_laynorm": {"class": "layer_norm", "from": ["enc_004_self_att_out"]},
    "enc_004_conv_output": {
        "class": "combine",
        "from": ["enc_004_self_att_out", "enc_004_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_004_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_004_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_004_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_004_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_004_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_003",
            "subnetwork": {
                "enc_003": {"class": "copy", "from": "data"},
                "enc_004_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_004_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_004_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_004_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_004_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_004_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_004_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_004_ff1_conv2"],
                    "name_scope": "/enc_004_ff1_drop_scope",
                },
                "enc_004_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_004_ff1_drop"],
                    "name_scope": "/enc_004_ff1_drop_half_scope",
                },
                "enc_004_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_003",
                    "name_scope": "/enc_004_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_004_ff1_drop_half", "enc_003"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_003"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_003",
                "subnetwork": {
                    "enc_003": {"class": "copy", "from": "data"},
                    "enc_004_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_004_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_004_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_004_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_004_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_004_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_004_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_004_ff1_conv2"],
                        "name_scope": "/enc_004_ff1_drop_scope",
                    },
                    "enc_004_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_004_ff1_drop"],
                        "name_scope": "/enc_004_ff1_drop_half_scope",
                    },
                    "enc_004_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_003",
                        "name_scope": "/enc_004_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_004_ff1_drop_half", "enc_003"],
                    },
                },
            },
        },
    },
    "enc_004_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_004_conv_output",
            "subnetwork": {
                "enc_004_conv_output": {"class": "copy", "from": "data"},
                "enc_004_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_004_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_004_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_004_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_004_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_004_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_004_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_004_ff2_conv2"],
                    "name_scope": "/enc_004_ff2_drop_scope",
                },
                "enc_004_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_004_ff2_drop"],
                    "name_scope": "/enc_004_ff2_drop_half_scope",
                },
                "enc_004_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_004_conv_output",
                    "name_scope": "/enc_004_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_004_ff2_drop_half", "enc_004_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_004_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_004_conv_output",
                "subnetwork": {
                    "enc_004_conv_output": {"class": "copy", "from": "data"},
                    "enc_004_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_004_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_004_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_004_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_004_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_004_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_004_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_004_ff2_conv2"],
                        "name_scope": "/enc_004_ff2_drop_scope",
                    },
                    "enc_004_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_004_ff2_drop"],
                        "name_scope": "/enc_004_ff2_drop_half_scope",
                    },
                    "enc_004_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_004_conv_output",
                        "name_scope": "/enc_004_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_004_ff2_drop_half", "enc_004_conv_output"],
                    },
                },
            },
        },
    },
    "enc_004_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_004_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_004_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_004_self_att_laynorm"],
        "key_shift": "enc_004_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_004_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_004_self_att_lin"],
    },
    "enc_004_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_004_ff1_ff1_cond_train"],
    },
    "enc_004_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_004_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_004_self_att_out": {
        "class": "combine",
        "from": ["enc_004_ff1_ff1_cond_train", "enc_004_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_005": {"class": "copy", "from": "enc_005_ff2_ff2_cond_train"},
    "enc_005_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_005_conv_pointwise1"],
    },
    "enc_005_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_005_conv_batchnorm"],
    },
    "enc_005_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_005_conv_depthwise"],
    },
    "enc_005_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_005_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_005_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_005_conv_pointwise2"],
    },
    "enc_005_conv_laynorm": {"class": "layer_norm", "from": ["enc_005_self_att_out"]},
    "enc_005_conv_output": {
        "class": "combine",
        "from": ["enc_005_self_att_out", "enc_005_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_005_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_005_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_005_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_005_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_005_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_004",
            "subnetwork": {
                "enc_004": {"class": "copy", "from": "data"},
                "enc_005_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_005_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_005_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_005_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_005_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_005_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_005_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_005_ff1_conv2"],
                    "name_scope": "/enc_005_ff1_drop_scope",
                },
                "enc_005_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_005_ff1_drop"],
                    "name_scope": "/enc_005_ff1_drop_half_scope",
                },
                "enc_005_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_004",
                    "name_scope": "/enc_005_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_005_ff1_drop_half", "enc_004"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_004"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_004",
                "subnetwork": {
                    "enc_004": {"class": "copy", "from": "data"},
                    "enc_005_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_005_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_005_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_005_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_005_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_005_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_005_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_005_ff1_conv2"],
                        "name_scope": "/enc_005_ff1_drop_scope",
                    },
                    "enc_005_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_005_ff1_drop"],
                        "name_scope": "/enc_005_ff1_drop_half_scope",
                    },
                    "enc_005_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_004",
                        "name_scope": "/enc_005_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_005_ff1_drop_half", "enc_004"],
                    },
                },
            },
        },
    },
    "enc_005_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_005_conv_output",
            "subnetwork": {
                "enc_005_conv_output": {"class": "copy", "from": "data"},
                "enc_005_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_005_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_005_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_005_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_005_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_005_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_005_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_005_ff2_conv2"],
                    "name_scope": "/enc_005_ff2_drop_scope",
                },
                "enc_005_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_005_ff2_drop"],
                    "name_scope": "/enc_005_ff2_drop_half_scope",
                },
                "enc_005_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_005_conv_output",
                    "name_scope": "/enc_005_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_005_ff2_drop_half", "enc_005_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_005_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_005_conv_output",
                "subnetwork": {
                    "enc_005_conv_output": {"class": "copy", "from": "data"},
                    "enc_005_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_005_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_005_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_005_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_005_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_005_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_005_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_005_ff2_conv2"],
                        "name_scope": "/enc_005_ff2_drop_scope",
                    },
                    "enc_005_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_005_ff2_drop"],
                        "name_scope": "/enc_005_ff2_drop_half_scope",
                    },
                    "enc_005_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_005_conv_output",
                        "name_scope": "/enc_005_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_005_ff2_drop_half", "enc_005_conv_output"],
                    },
                },
            },
        },
    },
    "enc_005_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_005_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_005_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_005_self_att_laynorm"],
        "key_shift": "enc_005_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_005_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_005_self_att_lin"],
    },
    "enc_005_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_005_ff1_ff1_cond_train"],
    },
    "enc_005_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_005_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_005_self_att_out": {
        "class": "combine",
        "from": ["enc_005_ff1_ff1_cond_train", "enc_005_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_006": {"class": "copy", "from": "enc_006_ff2_ff2_cond_train"},
    "enc_006_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_006_conv_pointwise1"],
    },
    "enc_006_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_006_conv_batchnorm"],
    },
    "enc_006_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_006_conv_depthwise"],
    },
    "enc_006_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_006_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_006_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_006_conv_pointwise2"],
    },
    "enc_006_conv_laynorm": {"class": "layer_norm", "from": ["enc_006_self_att_out"]},
    "enc_006_conv_output": {
        "class": "combine",
        "from": ["enc_006_self_att_out", "enc_006_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_006_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_006_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_006_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_006_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_006_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_005",
            "subnetwork": {
                "enc_005": {"class": "copy", "from": "data"},
                "enc_006_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_006_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_006_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_006_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_006_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_006_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_006_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_006_ff1_conv2"],
                    "name_scope": "/enc_006_ff1_drop_scope",
                },
                "enc_006_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_006_ff1_drop"],
                    "name_scope": "/enc_006_ff1_drop_half_scope",
                },
                "enc_006_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_005",
                    "name_scope": "/enc_006_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_006_ff1_drop_half", "enc_005"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_005"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_005",
                "subnetwork": {
                    "enc_005": {"class": "copy", "from": "data"},
                    "enc_006_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_006_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_006_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_006_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_006_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_006_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_006_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_006_ff1_conv2"],
                        "name_scope": "/enc_006_ff1_drop_scope",
                    },
                    "enc_006_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_006_ff1_drop"],
                        "name_scope": "/enc_006_ff1_drop_half_scope",
                    },
                    "enc_006_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_005",
                        "name_scope": "/enc_006_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_006_ff1_drop_half", "enc_005"],
                    },
                },
            },
        },
    },
    "enc_006_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_006_conv_output",
            "subnetwork": {
                "enc_006_conv_output": {"class": "copy", "from": "data"},
                "enc_006_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_006_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_006_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_006_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_006_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_006_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_006_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_006_ff2_conv2"],
                    "name_scope": "/enc_006_ff2_drop_scope",
                },
                "enc_006_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_006_ff2_drop"],
                    "name_scope": "/enc_006_ff2_drop_half_scope",
                },
                "enc_006_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_006_conv_output",
                    "name_scope": "/enc_006_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_006_ff2_drop_half", "enc_006_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_006_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_006_conv_output",
                "subnetwork": {
                    "enc_006_conv_output": {"class": "copy", "from": "data"},
                    "enc_006_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_006_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_006_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_006_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_006_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_006_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_006_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_006_ff2_conv2"],
                        "name_scope": "/enc_006_ff2_drop_scope",
                    },
                    "enc_006_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_006_ff2_drop"],
                        "name_scope": "/enc_006_ff2_drop_half_scope",
                    },
                    "enc_006_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_006_conv_output",
                        "name_scope": "/enc_006_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_006_ff2_drop_half", "enc_006_conv_output"],
                    },
                },
            },
        },
    },
    "enc_006_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_006_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_006_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_006_self_att_laynorm"],
        "key_shift": "enc_006_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_006_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_006_self_att_lin"],
    },
    "enc_006_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_006_ff1_ff1_cond_train"],
    },
    "enc_006_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_006_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_006_self_att_out": {
        "class": "combine",
        "from": ["enc_006_ff1_ff1_cond_train", "enc_006_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_007": {"class": "copy", "from": "enc_007_ff2_ff2_cond_train"},
    "enc_007_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_007_conv_pointwise1"],
    },
    "enc_007_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_007_conv_batchnorm"],
    },
    "enc_007_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_007_conv_depthwise"],
    },
    "enc_007_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_007_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_007_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_007_conv_pointwise2"],
    },
    "enc_007_conv_laynorm": {"class": "layer_norm", "from": ["enc_007_self_att_out"]},
    "enc_007_conv_output": {
        "class": "combine",
        "from": ["enc_007_self_att_out", "enc_007_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_007_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_007_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_007_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_007_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_007_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_006",
            "subnetwork": {
                "enc_006": {"class": "copy", "from": "data"},
                "enc_007_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_007_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_007_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_007_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_007_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_007_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_007_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_007_ff1_conv2"],
                    "name_scope": "/enc_007_ff1_drop_scope",
                },
                "enc_007_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_007_ff1_drop"],
                    "name_scope": "/enc_007_ff1_drop_half_scope",
                },
                "enc_007_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_006",
                    "name_scope": "/enc_007_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_007_ff1_drop_half", "enc_006"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_006"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_006",
                "subnetwork": {
                    "enc_006": {"class": "copy", "from": "data"},
                    "enc_007_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_007_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_007_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_007_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_007_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_007_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_007_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_007_ff1_conv2"],
                        "name_scope": "/enc_007_ff1_drop_scope",
                    },
                    "enc_007_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_007_ff1_drop"],
                        "name_scope": "/enc_007_ff1_drop_half_scope",
                    },
                    "enc_007_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_006",
                        "name_scope": "/enc_007_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_007_ff1_drop_half", "enc_006"],
                    },
                },
            },
        },
    },
    "enc_007_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_007_conv_output",
            "subnetwork": {
                "enc_007_conv_output": {"class": "copy", "from": "data"},
                "enc_007_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_007_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_007_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_007_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_007_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_007_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_007_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_007_ff2_conv2"],
                    "name_scope": "/enc_007_ff2_drop_scope",
                },
                "enc_007_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_007_ff2_drop"],
                    "name_scope": "/enc_007_ff2_drop_half_scope",
                },
                "enc_007_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_007_conv_output",
                    "name_scope": "/enc_007_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_007_ff2_drop_half", "enc_007_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_007_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_007_conv_output",
                "subnetwork": {
                    "enc_007_conv_output": {"class": "copy", "from": "data"},
                    "enc_007_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_007_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_007_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_007_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_007_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_007_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_007_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_007_ff2_conv2"],
                        "name_scope": "/enc_007_ff2_drop_scope",
                    },
                    "enc_007_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_007_ff2_drop"],
                        "name_scope": "/enc_007_ff2_drop_half_scope",
                    },
                    "enc_007_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_007_conv_output",
                        "name_scope": "/enc_007_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_007_ff2_drop_half", "enc_007_conv_output"],
                    },
                },
            },
        },
    },
    "enc_007_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_007_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_007_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_007_self_att_laynorm"],
        "key_shift": "enc_007_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_007_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_007_self_att_lin"],
    },
    "enc_007_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_007_ff1_ff1_cond_train"],
    },
    "enc_007_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_007_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_007_self_att_out": {
        "class": "combine",
        "from": ["enc_007_ff1_ff1_cond_train", "enc_007_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_008": {"class": "copy", "from": "enc_008_ff2_ff2_cond_train"},
    "enc_008_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_008_conv_pointwise1"],
    },
    "enc_008_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_008_conv_batchnorm"],
    },
    "enc_008_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_008_conv_depthwise"],
    },
    "enc_008_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_008_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_008_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_008_conv_pointwise2"],
    },
    "enc_008_conv_laynorm": {"class": "layer_norm", "from": ["enc_008_self_att_out"]},
    "enc_008_conv_output": {
        "class": "combine",
        "from": ["enc_008_self_att_out", "enc_008_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_008_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_008_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_008_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_008_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_008_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_007",
            "subnetwork": {
                "enc_007": {"class": "copy", "from": "data"},
                "enc_008_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_008_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_008_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_008_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_008_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_008_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_008_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_008_ff1_conv2"],
                    "name_scope": "/enc_008_ff1_drop_scope",
                },
                "enc_008_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_008_ff1_drop"],
                    "name_scope": "/enc_008_ff1_drop_half_scope",
                },
                "enc_008_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_007",
                    "name_scope": "/enc_008_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_008_ff1_drop_half", "enc_007"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_007"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_007",
                "subnetwork": {
                    "enc_007": {"class": "copy", "from": "data"},
                    "enc_008_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_008_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_008_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_008_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_008_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_008_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_008_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_008_ff1_conv2"],
                        "name_scope": "/enc_008_ff1_drop_scope",
                    },
                    "enc_008_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_008_ff1_drop"],
                        "name_scope": "/enc_008_ff1_drop_half_scope",
                    },
                    "enc_008_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_007",
                        "name_scope": "/enc_008_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_008_ff1_drop_half", "enc_007"],
                    },
                },
            },
        },
    },
    "enc_008_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_008_conv_output",
            "subnetwork": {
                "enc_008_conv_output": {"class": "copy", "from": "data"},
                "enc_008_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_008_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_008_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_008_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_008_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_008_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_008_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_008_ff2_conv2"],
                    "name_scope": "/enc_008_ff2_drop_scope",
                },
                "enc_008_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_008_ff2_drop"],
                    "name_scope": "/enc_008_ff2_drop_half_scope",
                },
                "enc_008_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_008_conv_output",
                    "name_scope": "/enc_008_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_008_ff2_drop_half", "enc_008_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_008_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_008_conv_output",
                "subnetwork": {
                    "enc_008_conv_output": {"class": "copy", "from": "data"},
                    "enc_008_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_008_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_008_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_008_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_008_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_008_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_008_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_008_ff2_conv2"],
                        "name_scope": "/enc_008_ff2_drop_scope",
                    },
                    "enc_008_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_008_ff2_drop"],
                        "name_scope": "/enc_008_ff2_drop_half_scope",
                    },
                    "enc_008_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_008_conv_output",
                        "name_scope": "/enc_008_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_008_ff2_drop_half", "enc_008_conv_output"],
                    },
                },
            },
        },
    },
    "enc_008_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_008_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_008_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_008_self_att_laynorm"],
        "key_shift": "enc_008_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_008_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_008_self_att_lin"],
    },
    "enc_008_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_008_ff1_ff1_cond_train"],
    },
    "enc_008_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_008_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_008_self_att_out": {
        "class": "combine",
        "from": ["enc_008_ff1_ff1_cond_train", "enc_008_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_009": {"class": "copy", "from": "enc_009_ff2_ff2_cond_train"},
    "enc_009_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_009_conv_pointwise1"],
    },
    "enc_009_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_009_conv_batchnorm"],
    },
    "enc_009_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_009_conv_depthwise"],
    },
    "enc_009_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_009_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_009_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_009_conv_pointwise2"],
    },
    "enc_009_conv_laynorm": {"class": "layer_norm", "from": ["enc_009_self_att_out"]},
    "enc_009_conv_output": {
        "class": "combine",
        "from": ["enc_009_self_att_out", "enc_009_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_009_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_009_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_009_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_009_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_009_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_008",
            "subnetwork": {
                "enc_008": {"class": "copy", "from": "data"},
                "enc_009_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_009_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_009_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_009_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_009_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_009_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_009_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_009_ff1_conv2"],
                    "name_scope": "/enc_009_ff1_drop_scope",
                },
                "enc_009_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_009_ff1_drop"],
                    "name_scope": "/enc_009_ff1_drop_half_scope",
                },
                "enc_009_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_008",
                    "name_scope": "/enc_009_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_009_ff1_drop_half", "enc_008"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_008"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_008",
                "subnetwork": {
                    "enc_008": {"class": "copy", "from": "data"},
                    "enc_009_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_009_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_009_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_009_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_009_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_009_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_009_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_009_ff1_conv2"],
                        "name_scope": "/enc_009_ff1_drop_scope",
                    },
                    "enc_009_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_009_ff1_drop"],
                        "name_scope": "/enc_009_ff1_drop_half_scope",
                    },
                    "enc_009_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_008",
                        "name_scope": "/enc_009_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_009_ff1_drop_half", "enc_008"],
                    },
                },
            },
        },
    },
    "enc_009_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_009_conv_output",
            "subnetwork": {
                "enc_009_conv_output": {"class": "copy", "from": "data"},
                "enc_009_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_009_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_009_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_009_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_009_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_009_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_009_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_009_ff2_conv2"],
                    "name_scope": "/enc_009_ff2_drop_scope",
                },
                "enc_009_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_009_ff2_drop"],
                    "name_scope": "/enc_009_ff2_drop_half_scope",
                },
                "enc_009_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_009_conv_output",
                    "name_scope": "/enc_009_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_009_ff2_drop_half", "enc_009_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_009_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_009_conv_output",
                "subnetwork": {
                    "enc_009_conv_output": {"class": "copy", "from": "data"},
                    "enc_009_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_009_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_009_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_009_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_009_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_009_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_009_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_009_ff2_conv2"],
                        "name_scope": "/enc_009_ff2_drop_scope",
                    },
                    "enc_009_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_009_ff2_drop"],
                        "name_scope": "/enc_009_ff2_drop_half_scope",
                    },
                    "enc_009_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_009_conv_output",
                        "name_scope": "/enc_009_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_009_ff2_drop_half", "enc_009_conv_output"],
                    },
                },
            },
        },
    },
    "enc_009_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_009_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_009_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_009_self_att_laynorm"],
        "key_shift": "enc_009_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_009_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_009_self_att_lin"],
    },
    "enc_009_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_009_ff1_ff1_cond_train"],
    },
    "enc_009_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_009_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_009_self_att_out": {
        "class": "combine",
        "from": ["enc_009_ff1_ff1_cond_train", "enc_009_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_010": {"class": "copy", "from": "enc_010_ff2_ff2_cond_train"},
    "enc_010_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_010_conv_pointwise1"],
    },
    "enc_010_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_010_conv_batchnorm"],
    },
    "enc_010_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_010_conv_depthwise"],
    },
    "enc_010_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_010_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_010_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_010_conv_pointwise2"],
    },
    "enc_010_conv_laynorm": {"class": "layer_norm", "from": ["enc_010_self_att_out"]},
    "enc_010_conv_output": {
        "class": "combine",
        "from": ["enc_010_self_att_out", "enc_010_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_010_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_010_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_010_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_010_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_010_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_009",
            "subnetwork": {
                "enc_009": {"class": "copy", "from": "data"},
                "enc_010_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_010_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_010_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_010_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_010_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_010_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_010_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_010_ff1_conv2"],
                    "name_scope": "/enc_010_ff1_drop_scope",
                },
                "enc_010_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_010_ff1_drop"],
                    "name_scope": "/enc_010_ff1_drop_half_scope",
                },
                "enc_010_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_009",
                    "name_scope": "/enc_010_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_010_ff1_drop_half", "enc_009"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_009"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_009",
                "subnetwork": {
                    "enc_009": {"class": "copy", "from": "data"},
                    "enc_010_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_010_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_010_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_010_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_010_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_010_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_010_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_010_ff1_conv2"],
                        "name_scope": "/enc_010_ff1_drop_scope",
                    },
                    "enc_010_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_010_ff1_drop"],
                        "name_scope": "/enc_010_ff1_drop_half_scope",
                    },
                    "enc_010_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_009",
                        "name_scope": "/enc_010_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_010_ff1_drop_half", "enc_009"],
                    },
                },
            },
        },
    },
    "enc_010_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_010_conv_output",
            "subnetwork": {
                "enc_010_conv_output": {"class": "copy", "from": "data"},
                "enc_010_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_010_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_010_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_010_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_010_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_010_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_010_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_010_ff2_conv2"],
                    "name_scope": "/enc_010_ff2_drop_scope",
                },
                "enc_010_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_010_ff2_drop"],
                    "name_scope": "/enc_010_ff2_drop_half_scope",
                },
                "enc_010_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_010_conv_output",
                    "name_scope": "/enc_010_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_010_ff2_drop_half", "enc_010_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_010_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_010_conv_output",
                "subnetwork": {
                    "enc_010_conv_output": {"class": "copy", "from": "data"},
                    "enc_010_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_010_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_010_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_010_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_010_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_010_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_010_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_010_ff2_conv2"],
                        "name_scope": "/enc_010_ff2_drop_scope",
                    },
                    "enc_010_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_010_ff2_drop"],
                        "name_scope": "/enc_010_ff2_drop_half_scope",
                    },
                    "enc_010_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_010_conv_output",
                        "name_scope": "/enc_010_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_010_ff2_drop_half", "enc_010_conv_output"],
                    },
                },
            },
        },
    },
    "enc_010_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_010_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_010_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_010_self_att_laynorm"],
        "key_shift": "enc_010_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_010_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_010_self_att_lin"],
    },
    "enc_010_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_010_ff1_ff1_cond_train"],
    },
    "enc_010_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_010_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_010_self_att_out": {
        "class": "combine",
        "from": ["enc_010_ff1_ff1_cond_train", "enc_010_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_011": {"class": "copy", "from": "enc_011_ff2_ff2_cond_train"},
    "enc_011_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_011_conv_pointwise1"],
    },
    "enc_011_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_011_conv_batchnorm"],
    },
    "enc_011_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_011_conv_depthwise"],
    },
    "enc_011_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_011_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_011_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_011_conv_pointwise2"],
    },
    "enc_011_conv_laynorm": {"class": "layer_norm", "from": ["enc_011_self_att_out"]},
    "enc_011_conv_output": {
        "class": "combine",
        "from": ["enc_011_self_att_out", "enc_011_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_011_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_011_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_011_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_011_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_011_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_010",
            "subnetwork": {
                "enc_010": {"class": "copy", "from": "data"},
                "enc_011_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_011_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_011_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_011_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_011_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_011_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_011_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_011_ff1_conv2"],
                    "name_scope": "/enc_011_ff1_drop_scope",
                },
                "enc_011_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_011_ff1_drop"],
                    "name_scope": "/enc_011_ff1_drop_half_scope",
                },
                "enc_011_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_010",
                    "name_scope": "/enc_011_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_011_ff1_drop_half", "enc_010"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_010"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_010",
                "subnetwork": {
                    "enc_010": {"class": "copy", "from": "data"},
                    "enc_011_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_011_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_011_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_011_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_011_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_011_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_011_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_011_ff1_conv2"],
                        "name_scope": "/enc_011_ff1_drop_scope",
                    },
                    "enc_011_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_011_ff1_drop"],
                        "name_scope": "/enc_011_ff1_drop_half_scope",
                    },
                    "enc_011_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_010",
                        "name_scope": "/enc_011_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_011_ff1_drop_half", "enc_010"],
                    },
                },
            },
        },
    },
    "enc_011_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_011_conv_output",
            "subnetwork": {
                "enc_011_conv_output": {"class": "copy", "from": "data"},
                "enc_011_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_011_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_011_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_011_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_011_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_011_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_011_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_011_ff2_conv2"],
                    "name_scope": "/enc_011_ff2_drop_scope",
                },
                "enc_011_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_011_ff2_drop"],
                    "name_scope": "/enc_011_ff2_drop_half_scope",
                },
                "enc_011_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_011_conv_output",
                    "name_scope": "/enc_011_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_011_ff2_drop_half", "enc_011_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_011_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_011_conv_output",
                "subnetwork": {
                    "enc_011_conv_output": {"class": "copy", "from": "data"},
                    "enc_011_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_011_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_011_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_011_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_011_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_011_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_011_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_011_ff2_conv2"],
                        "name_scope": "/enc_011_ff2_drop_scope",
                    },
                    "enc_011_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_011_ff2_drop"],
                        "name_scope": "/enc_011_ff2_drop_half_scope",
                    },
                    "enc_011_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_011_conv_output",
                        "name_scope": "/enc_011_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_011_ff2_drop_half", "enc_011_conv_output"],
                    },
                },
            },
        },
    },
    "enc_011_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_011_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_011_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_011_self_att_laynorm"],
        "key_shift": "enc_011_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_011_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_011_self_att_lin"],
    },
    "enc_011_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_011_ff1_ff1_cond_train"],
    },
    "enc_011_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_011_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_011_self_att_out": {
        "class": "combine",
        "from": ["enc_011_ff1_ff1_cond_train", "enc_011_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_012": {"class": "copy", "from": "enc_012_ff2_ff2_cond_train"},
    "enc_012_conv_GLU": {
        "activation": "identity",
        "class": "gating",
        "from": ["enc_012_conv_pointwise1"],
    },
    "enc_012_conv_act": {
        "activation": "swish",
        "class": "activation",
        "from": ["enc_012_conv_batchnorm"],
    },
    "enc_012_conv_batchnorm": {
        "class": "layer_norm",
        "from": ["enc_012_conv_depthwise"],
    },
    "enc_012_conv_depthwise": {
        "activation": None,
        "class": "conv",
        "filter_size": (32,),
        "from": ["enc_012_conv_GLU"],
        "groups": 512,
        "n_out": 512,
        "padding": "same",
        "with_bias": True,
    },
    "enc_012_conv_dropout": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_012_conv_pointwise2"],
    },
    "enc_012_conv_laynorm": {"class": "layer_norm", "from": ["enc_012_self_att_out"]},
    "enc_012_conv_output": {
        "class": "combine",
        "from": ["enc_012_self_att_out", "enc_012_conv_dropout"],
        "kind": "add",
        "n_out": 512,
    },
    "enc_012_conv_pointwise1": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_012_conv_laynorm"],
        "n_out": 1024,
        "with_bias": False,
    },
    "enc_012_conv_pointwise2": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_012_conv_act"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_012_ff1_ff1_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_011",
            "subnetwork": {
                "enc_011": {"class": "copy", "from": "data"},
                "enc_012_ff1_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_012_ff1_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_012_ff1_conv1_scope",
                    "with_bias": True,
                },
                "enc_012_ff1_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_012_ff1_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_012_ff1_conv2_scope",
                    "with_bias": True,
                },
                "enc_012_ff1_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_012_ff1_conv2"],
                    "name_scope": "/enc_012_ff1_drop_scope",
                },
                "enc_012_ff1_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_012_ff1_drop"],
                    "name_scope": "/enc_012_ff1_drop_half_scope",
                },
                "enc_012_ff1_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_011",
                    "name_scope": "/enc_012_ff1_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_012_ff1_drop_half", "enc_011"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_011"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_011",
                "subnetwork": {
                    "enc_011": {"class": "copy", "from": "data"},
                    "enc_012_ff1_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_012_ff1_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_012_ff1_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_012_ff1_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_012_ff1_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_012_ff1_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_012_ff1_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_012_ff1_conv2"],
                        "name_scope": "/enc_012_ff1_drop_scope",
                    },
                    "enc_012_ff1_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_012_ff1_drop"],
                        "name_scope": "/enc_012_ff1_drop_half_scope",
                    },
                    "enc_012_ff1_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_011",
                        "name_scope": "/enc_012_ff1_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_012_ff1_drop_half", "enc_011"],
                    },
                },
            },
        },
    },
    "enc_012_ff2_ff2_cond_train": {
        "class": "cond",
        "condition": {"class": "train_flag"},
        "false_layer": {
            "class": "subnetwork",
            "from": "enc_012_conv_output",
            "subnetwork": {
                "enc_012_conv_output": {"class": "copy", "from": "data"},
                "enc_012_ff2_conv1": {
                    "activation": "swish",
                    "class": "linear",
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_012_ff2_laynorm"],
                    "n_out": 2048,
                    "name_scope": "/enc_012_ff2_conv1_scope",
                    "with_bias": True,
                },
                "enc_012_ff2_conv2": {
                    "activation": None,
                    "class": "linear",
                    "dropout": 0.1,
                    "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                    "distribution='uniform', "
                    "scale=0.78)",
                    "from": ["enc_012_ff2_conv1"],
                    "n_out": 512,
                    "name_scope": "/enc_012_ff2_conv2_scope",
                    "with_bias": True,
                },
                "enc_012_ff2_drop": {
                    "class": "dropout",
                    "dropout": 0.1,
                    "from": ["enc_012_ff2_conv2"],
                    "name_scope": "/enc_012_ff2_drop_scope",
                },
                "enc_012_ff2_drop_half": {
                    "class": "eval",
                    "eval": "0.5 * source(0)",
                    "from": ["enc_012_ff2_drop"],
                    "name_scope": "/enc_012_ff2_drop_half_scope",
                },
                "enc_012_ff2_laynorm": {
                    "class": "layer_norm",
                    "from": "enc_012_conv_output",
                    "name_scope": "/enc_012_ff2_laynorm_scope",
                },
                "output": {
                    "class": "eval",
                    "eval": "source(0) * 0.5 + source(1)",
                    "from": ["enc_012_ff2_drop_half", "enc_012_conv_output"],
                },
            },
        },
        "from": [],
        "true_layer": {
            "class": "cond",
            "condition": {
                "class": "eval",
                "eval": "tf.equal(tf.compat.v1.distributions.Bernoulli(probs=0.5).sample(sample_shape=()), "
                "0)",
                "from": [],
                "out_type": {"batch_dim_axis": None, "dtype": "bool", "shape": ()},
            },
            "false_layer": {"class": "copy", "from": "enc_012_conv_output"},
            "from": [],
            "true_layer": {
                "class": "subnetwork",
                "from": "enc_012_conv_output",
                "subnetwork": {
                    "enc_012_conv_output": {"class": "copy", "from": "data"},
                    "enc_012_ff2_conv1": {
                        "activation": "swish",
                        "class": "linear",
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_012_ff2_laynorm"],
                        "n_out": 2048,
                        "name_scope": "/enc_012_ff2_conv1_scope",
                        "with_bias": True,
                    },
                    "enc_012_ff2_conv2": {
                        "activation": None,
                        "class": "linear",
                        "dropout": 0.1,
                        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', "
                        "distribution='uniform', "
                        "scale=0.78)",
                        "from": ["enc_012_ff2_conv1"],
                        "n_out": 512,
                        "name_scope": "/enc_012_ff2_conv2_scope",
                        "with_bias": True,
                    },
                    "enc_012_ff2_drop": {
                        "class": "dropout",
                        "dropout": 0.1,
                        "from": ["enc_012_ff2_conv2"],
                        "name_scope": "/enc_012_ff2_drop_scope",
                    },
                    "enc_012_ff2_drop_half": {
                        "class": "eval",
                        "eval": "0.5 * source(0)",
                        "from": ["enc_012_ff2_drop"],
                        "name_scope": "/enc_012_ff2_drop_half_scope",
                    },
                    "enc_012_ff2_laynorm": {
                        "class": "layer_norm",
                        "from": "enc_012_conv_output",
                        "name_scope": "/enc_012_ff2_laynorm_scope",
                    },
                    "output": {
                        "class": "eval",
                        "eval": "source(0) + source(1)",
                        "from": ["enc_012_ff2_drop_half", "enc_012_conv_output"],
                    },
                },
            },
        },
    },
    "enc_012_rel_pos": {
        "class": "relative_positional_encoding",
        "clipping": 400,
        "fixed": False,
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_012_self_att_laynorm"],
        "n_out": 64,
    },
    "enc_012_self_att_att": {
        "attention_dropout": 0.1,
        "attention_left_only": False,
        "class": "self_attention",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_012_self_att_laynorm"],
        "key_shift": "enc_012_rel_pos",
        "n_out": 512,
        "num_heads": 8,
        "total_key_dim": 512,
    },
    "enc_012_self_att_drop": {
        "class": "dropout",
        "dropout": 0.1,
        "from": ["enc_012_self_att_lin"],
    },
    "enc_012_self_att_laynorm": {
        "class": "layer_norm",
        "from": ["enc_012_ff1_ff1_cond_train"],
    },
    "enc_012_self_att_lin": {
        "activation": None,
        "class": "linear",
        "forward_weights_init": "variance_scaling_initializer(mode='fan_in', distribution='uniform', scale=0.78)",
        "from": ["enc_012_self_att_att"],
        "n_out": 512,
        "with_bias": False,
    },
    "enc_012_self_att_out": {
        "class": "combine",
        "from": ["enc_012_ff1_ff1_cond_train", "enc_012_self_att_drop"],
        "kind": "add",
        "n_out": 512,
    },
    "encoder": {"class": "layer_norm", "from": ["enc_012"]},
    "feature_stacking_merged": {
        "axes": ["dim:3", "F"],
        "class": "merge_dims",
        "from": ["feature_stacking_window"],
    },
    "feature_stacking_window": {
        "class": "window",
        "from": ["conv_merged"],
        "stride": 3,
        "window_left": 2,
        "window_right": 0,
        "window_size": 3,
    },
    "length_masked": {
        "class": "reinterpret_data",
        "from": ["upsampled0"],
        "size_base": "data:classes",
    },
    "output": {
        "class": "softmax",
        "dropout": 0.0,
        "from": ["length_masked"],
        "loss": "ce",
        "loss_opts": {
            "focal_loss_factor": 0.0,
            "label_smoothing": 0.0,
            "use_normalized_loss": False,
        },
        "target": "classes",
    },
    "source": {
        "class": "eval",
        "eval": "self.network.get_config().typed_value('transform')(source(0), network=self.network)",
        "from": "data",
    },
    "source0": {
        "axis": "F",
        "class": "split_dims",
        "dims": (-1, 1),
        "from": ["source"],
    },
    "upsampled0": {
        "activation": "relu",
        "class": "transposed_conv",
        "filter_size": (3,),
        "from": ["encoder"],
        "n_out": 512,
        "strides": (3,),
        "with_bias": True,
    },
}
num_epochs = 120
num_inputs = 50
num_outputs = {"classes": [12001, 1], "data": [50, 2]}
optimizer = {"class": "nadam"}
optimizer_epsilon = 1e-08
save_interval = 1
start_batch = "auto"
start_epoch = "auto"
stop_on_nonfinite_train_score = False
target = "classes"
task = "train"
tf_log_memory_usage = True
train = {
    "class": "ExternSprintDataset",
    "partitionEpoch": 40,
    "sprintConfigStr": "--config=rasr.train.config --*.LOGFILE=nn-trainer.train.log --*.TASK=1",
    "sprintTrainerExecPath": "/work/asr3/zeyer/schupp/setups-data/custom_rasr/rasr/arch/linux-x86_64-generic_mkl/nn-trainer.linux-x86_64-generic_mkl",
}
truncation = -1
update_on_device = True
use_tensorflow = True
window = 1
config = {}

locals().update(**config)
